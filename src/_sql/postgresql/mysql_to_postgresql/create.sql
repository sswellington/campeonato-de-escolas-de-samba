-- Criação do banco de dados se não existir
CREATE DATABASE IF NOT EXISTS carnaval;

-- Conectar ao banco de dados carnaval
\c carnaval;

-- Tabela Pessoa
DROP TABLE IF EXISTS pessoa;
CREATE TABLE pessoa (
  cpf bigint NOT NULL,
  nome varchar(40) NOT NULL,
  endereco varchar(40) NOT NULL,
  nascimento date NOT NULL,
  sexo varchar(1) NOT NULL,
  nacionalidade varchar(40) DEFAULT 'Brasileiro',
  PRIMARY KEY (cpf)
);

-- Tabela Campeonato
DROP TABLE IF EXISTS campeonato;
CREATE TABLE campeonato (
  ano smallint NOT NULL DEFAULT '2017',
  estado varchar(2) NOT NULL DEFAULT 'RJ',
  data_inicio date NOT NULL,
  data_fim date NOT NULL,
  regulamento text,
  PRIMARY KEY (ano, estado)
);

-- Tabela Escola
DROP TABLE IF EXISTS escola;
CREATE TABLE escola (
  cnpj bigint NOT NULL,
  nome varchar(30) NOT NULL,
  nome_fantasia varchar(50) NOT NULL,
  cor1 varchar(15) NOT NULL,
  cor2 varchar(15) NOT NULL,
  cor3 varchar(15),
  endereco varchar(60),
  fundacao smallint,
  PRIMARY KEY (cnpj)
);

-- Tabela Espectador
DROP TABLE IF EXISTS espectador;
CREATE TABLE espectador (
  cpf_espectador bigint NOT NULL,
  email varchar(80),
  ingresso bigint NOT NULL,
  telefone bigint,
  PRIMARY KEY (cpf_espectador),
  CONSTRAINT fk_espectador_pessoa FOREIGN KEY (cpf_espectador) REFERENCES pessoa (cpf)
);

-- Tabela Participante
DROP TABLE IF EXISTS participante;
CREATE TABLE participante (
  cpf_participante bigint NOT NULL,
  cargo varchar(50),
  filiacao date NOT NULL,
  PRIMARY KEY (cpf_participante),
  CONSTRAINT fk_participante_pessoa FOREIGN KEY (cpf_participante) REFERENCES pessoa (cpf)
);

-- Tabela Fundador
DROP TABLE IF EXISTS fundador;
CREATE TABLE fundador (
  cpf_fundador bigint NOT NULL,
  data_obito date,
  PRIMARY KEY (cpf_fundador),
  CONSTRAINT fk_fundador_pessoa FOREIGN KEY (cpf_fundador) REFERENCES pessoa (cpf)
);

-- Tabela Sambodromo
DROP TABLE IF EXISTS sambodromo;
CREATE TABLE sambodromo (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  nome varchar(50) NOT NULL,
  endereco varchar(80) NOT NULL,
  data_inauguracao date NOT NULL,
  cidade varchar(25),
  PRIMARY KEY (id)
);

-- Tabela Fundar
DROP TABLE IF EXISTS fundar;
CREATE TABLE fundar (
  cpf_fundador bigint NOT NULL,
  id_sambodromo bigint NOT NULL,
  PRIMARY KEY (cpf_fundador, id_sambodromo),
  CONSTRAINT fk_fundar_fundador FOREIGN KEY (cpf_fundador) REFERENCES fundador (cpf_fundador),
  CONSTRAINT fk_fundar_sambodromo FOREIGN KEY (id_sambodromo) REFERENCES sambodromo (id)
);

-- Tabela Sediar
DROP TABLE IF EXISTS sediar;
CREATE TABLE sediar (
  id_sambodromo bigint NOT NULL,
  ano smallint NOT NULL,
  estado varchar(2) NOT NULL,
  PRIMARY KEY (id_sambodromo, ano, estado),
  CONSTRAINT fk_sediar_sambodromo FOREIGN KEY (id_sambodromo) REFERENCES sambodromo (id),
  CONSTRAINT fk_sediar_campeonato FOREIGN KEY (ano, estado) REFERENCES campeonato (ano, estado)
);

-- Tabela Setores
DROP TABLE IF EXISTS setores;
CREATE TABLE setores (
  numero bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  categoria varchar(25) NOT NULL,
  valor bigint NOT NULL,
  capacidade bigint NOT NULL,
  id_sambodromo bigint NOT NULL,
  PRIMARY KEY (numero, id_sambodromo),
  CONSTRAINT fk_setores_sambodromo FOREIGN KEY (id_sambodromo) REFERENCES sambodromo (id)
);

-- Tabela Filiar
DROP TABLE IF EXISTS filiar;
CREATE TABLE filiar (
  cpf_participante bigint NOT NULL,
  cnpj_escola bigint,
  filiacao smallint NOT NULL,
  data_desfiliacao smallint,
  PRIMARY KEY (cpf_participante),
  CONSTRAINT fk_filiar_participante FOREIGN KEY (cpf_participante) REFERENCES participante (cpf_participante),
  CONSTRAINT fk_filiar_escola FOREIGN KEY (cnpj_escola) REFERENCES escola (cnpj)
);

-- Tabela Integrante
DROP TABLE IF EXISTS integrante;
CREATE TABLE integrante (
  cnpj bigint NOT NULL,
  ano smallint NOT NULL,
  estado varchar(2) NOT NULL,
  data_desfile date NOT NULL,
  grupo varchar(15) NOT NULL,
  colocacao bigint NOT NULL,
  enredo varchar(80),
  hora_inicio time,
  hora_fim time,
  PRIMARY KEY (cnpj, ano, estado, data_desfile),
  CONSTRAINT fk_integrante_escola FOREIGN KEY (cnpj) REFERENCES escola (cnpj),
  CONSTRAINT fk_integrante_campeonato FOREIGN KEY (ano, estado) REFERENCES campeonato (ano, estado)
);

-- Tabela Jurado
DROP TABLE IF EXISTS jurado;
CREATE TABLE jurado (
  cpf_jurado bigint NOT NULL,
  atividade varchar(80) NOT NULL,
  PRIMARY KEY (cpf_jurado),
  CONSTRAINT fk_jurado_pessoa FOREIGN KEY (cpf_jurado) REFERENCES pessoa (cpf)
);

-- Tabela Julgar
DROP TABLE IF EXISTS julgar;
CREATE TABLE julgar (
  cnpj bigint NOT NULL,
  ano smallint NOT NULL,
  estado varchar(2) NOT NULL,
  data date NOT NULL,
  cpf_jurado bigint NOT NULL,
  nota bigint NOT NULL,
  quesito varchar(20) NOT NULL,
  PRIMARY KEY (cnpj, ano, estado, data, cpf_jurado),
  CONSTRAINT fk_julgar_integrante FOREIGN KEY (cnpj, ano, estado, data) REFERENCES integrante (cnpj, ano, estado, data_desfile),
  CONSTRAINT fk_julgar_jurado FOREIGN KEY (cpf_jurado) REFERENCES jurado (cpf_jurado)
);

-- Tabela SEI
DROP TABLE IF EXISTS sei;
CREATE TABLE sei (
  cpf_espectador bigint NOT NULL,
  cnpj bigint NOT NULL,
  ano smallint NOT NULL,
  estado varchar(2) NOT NULL,
  data date NOT NULL,
  id_sambodromo bigint NOT NULL,
  numero_setores bigint NOT NULL,
  PRIMARY KEY (cpf_espectador, cnpj, ano, estado, data),
  CONSTRAINT fk_sei_espectador FOREIGN KEY (cpf_espectador) REFERENCES espectador (cpf_espectador),
  CONSTRAINT fk_sei_integrante FOREIGN KEY (cnpj, ano, estado, data) REFERENCES integrante (cnpj, ano, estado, data_desfile),
  CONSTRAINT fk_sei_setores FOREIGN KEY (numero_setores, id_sambodromo) REFERENCES setores (numero, id_sambodromo)
);
